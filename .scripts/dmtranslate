#!/usr/bin/env bash

# Description: Translate using Google Translate (through Lingva Translate)
# Dependencies: dmenu, curl, and jq

set -euo pipefail

DMENU="dmenu -i -l 20 -p"

translate_list='auto'
#translate_list="manual"
#from_code="en" # English
#to_code="vi" # Vietnamese
    
main() {
    # Declare Services and their 
    declare -A translate_services
    translate_services[lingva]="https://lingva.ml"
    
    declare -A translate_languages_url    
    translate_languages_url[lingva]="https://lingva.ml/api/v1/languages/source"
    
    declare -A translate_languages_jq
    translate_languages_jq[lingva]=".languages | to_entries[] | .value | [.code,.name] | @sh"
    
    declare translate_service="lingva"
    
    # check variable before lang_map check?
    if [[ "${translate_list:-auto}" != "manual" ]]; then
        declare -A lang_map

        local url=${translate_languages_url["${translate_service}"]} 
        local jq=${translate_languages_jq["${translate_service}"]}
        mapfile -t data < <(curl -Ss ${url}| jq -cr "${jq}" )
        for ((i=0; i < ${#data[@]}; ++i)); do
          # shellcheck disable=SC2086
          lang_map[$(echo ${data[$i]} | cut -d"'" -f4)]="$(echo ${data[$i]} | cut -d"'" -f2)"
        done
        unset data

        # Get the languages to translate from and to
        from_name=$(printf '%s\n' "${!lang_map[@]}" | sort | ${DMENU} 'Translate from:') "$@" || exit 1
        from_code=${lang_map[$from_name]}
        to_name=$(printf '%s\n' "${!lang_map[@]}" | sort | ${DMENU} 'Translate to:') "$@" || exit 1
        to_code=${lang_map[$to_name]}
    fi
    
    # Get text to translate and url encode 
    query=$(echo -n "" | ${DMENU} "Translate (${from_code} -> ${to_code}):")
    query="$(echo "${query}" | jq -s -R -r @uri)"
    
    declare -A translate_query translate_query_jq translate_method
    translate_method[lingva]="GET"
    translate_query[lingva]="https://lingva.ml/api/v1/${from_code}/${to_code}/${query}"
    translate_query_jq[lingva]=".translation"
    
    translation_url=${translate_query[${translate_service}]}
    translation_jq=${translate_query_jq[${translate_service}]}
    translation_method=${translate_method[${translate_service}]}
    
    translation=$(curl -Ss "${translation_url}" | jq -r "${translation_jq}")
    
    # Copy translation to clipboard and send notification
    echo "${translation}" | xclip -sel c 
    notify-send "Translation (in clipboard)" "<span foreground='#005473' font='sans 15'>$translation</span>"
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
