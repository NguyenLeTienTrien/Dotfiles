#!/usr/bin/env bash

[ ! -d "$HOME/.cache/vifm" ] && mkdir -p "$HOME/.cache/vifm"
PCACHE="$HOME/.cache/vifm/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$PWD/$6")" | sha256sum)"
export PCACHE="${PCACHE%% *}"

# Ueberzug
ueberzug_preview() {
    printf '{"action": "add", "identifier": "vifm-preview", "x": "%s", "y": "%s", "width": "%s", "height": "%s", "scaler": "contain", "path": "%s"}\n' "$2" "$3" "$4" "$5" "$6" > "$FIFO_UEBERZUG"
}
ueberzug_clear() {
    printf '{"action": "remove", "identifier": "vifm-preview"}\n' > "$FIFO_UEBERZUG"
}

# Kitty builtin image preview
kitty_preview() {
    kitten icat --silent --transfer-mode=file --place="${4}x${5}@${2}x${3}" "$6" >/dev/tty </dev/tty
}
kitty_clear() {
    kitten icat --clear --silent >/dev/tty </dev/tty
}

preview() {
    if [[ -n "$KITTY_WINDOW_ID" ]]; then
        kitty_preview "$@"
    elif [[ -n "$FIFO_UEBERZUG" ]]; then
        ueberzug_preview "$@"
    else
        echo "There is no tool to support image preview"
    fi
}
clear() {
    if [[ -n "$KITTY_WINDOW_ID" ]]; then
        kitty_clear
    elif [[ -n "$FIFO_UEBERZUG" ]]; then
        ueberzug_clear
    fi
}

ifnocache() {
    echo "Loading preview ..."
    [ ! -f "${PCACHE}$1" ]
}

main() {
    case "$1" in
        "clear")
            clear "$@"
            ;;
        "draw")
            preview "$1" "$2" "$3" "$4" "$5" "$PWD/$6"
            ;;
        "video")
            # Replace "jpg" by "png" if you want higher quality previews, but it have a biger size
            ifnocache ".jpg" && ffmpegthumbnailer -i "$6" -o "${PCACHE}.jpg" -s 0 -q 5
            preview "$1" "$2" "$3" "$4" "$5" "${PCACHE}.jpg"
            ;;
        "pdf")
            ifnocache ".jpg" && pdftoppm -jpeg -f 1 -singlefile "$6" "$PCACHE"
            preview "$1" "$2" "$3" "$4" "$5" "${PCACHE}.jpg"
            ;;
        "audio")
            ifnocache ".jpg" && ffmpeg -hide_banner -i "$6" "${PCACHE}.jpg" -y >/dev/null
            preview "$1" "$2" "$3" "$4" "$5" "${PCACHE}.jpg"
            ;;
        "font")
            ifnocache ".jpg" && fontpreview -i "$6" -o "${PCACHE}.jpg"
            image "$1" "$2" "$3" "$4" "$5" "${PCACHE}.jpg"
            ;;
        *)
    esac
}
main "$@"
